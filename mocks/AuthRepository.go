// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	auth "github.com/GP-2-Kelompok-4/Immersive-Dashboard-App/features/auth"
	mock "github.com/stretchr/testify/mock"
)

// AuthRepository is an autogenerated mock type for the RepositoryInterface type
type AuthRepository struct {
	mock.Mock
}

// Login provides a mock function with given fields: email, password
func (_m *AuthRepository) Login(email string, password string) (auth.Core, error) {
	ret := _m.Called(email, password)

	var r0 auth.Core
	if rf, ok := ret.Get(0).(func(string, string) auth.Core); ok {
		r0 = rf(email, password)
	} else {
		r0 = ret.Get(0).(auth.Core)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(email, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAuthRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewAuthRepository creates a new instance of AuthRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAuthRepository(t mockConstructorTestingTNewAuthRepository) *AuthRepository {
	mock := &AuthRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
